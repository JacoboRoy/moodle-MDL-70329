{"version":3,"sources":["../src/question_slot.js"],"names":["SELECTORS","setSelectors","slotId","slotIdClass","VERSION_LIST","SLOT_ID","QUESTION_NAME","QUESTION_TEXT","ajax","request","Ajax","call","done","response","result","document","querySelector","innerHTML","name","questiontext","previewurl","href","URL","searchPreviewParams","searchParams","set","questionid","search","toString","setAttribute","editurl","searchparams","fail","Notification","exception","changeVersion","selectElement","addEventListener","versionSelected","parseInt","value","methodname","args","slotid","newversion","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Render the question slot template for each question in the quiz edit view.\n *\n * @module     mod_quiz/question_slot\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Guillermo Gomez Arias <guillermogomez@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n *\n * Initialize CSS selectors.\n *\n * @type {object}\n */\nlet SELECTORS = {};\n\n/**\n * Set CSS selector.\n * Add slot id to class if is not null.\n *\n * @param {int} slotId The slot id.\n */\nconst setSelectors = (slotId) => {\n    let slotIdClass = '';\n    if (slotId) {\n        slotIdClass = '-' + slotId;\n    }\n\n    SELECTORS = {\n        VERSION_LIST: '#version' + slotIdClass,\n        SLOT_ID: '#mod-indent-outer-slot' + slotIdClass,\n        QUESTION_NAME: '#questionname' + slotIdClass,\n        QUESTION_TEXT: '#questiontext' + slotIdClass,\n    };\n};\n\n/**\n * Helper ajax function.\n *\n * @param {object} request The request to be made.\n * @returns {Promise}\n */\nconst ajax = (request) => {\n    return Ajax.call(request)[0].done((response) => {\n        if (response.result === true) {\n            document.querySelector(SELECTORS.QUESTION_NAME).innerHTML = response.name;\n            document.querySelector(SELECTORS.QUESTION_TEXT).innerHTML = response.questiontext;\n            let previewurl = document.querySelector(SELECTORS.SLOT_ID + ' > .actions > .preview').href;\n            previewurl = new URL(previewurl);\n            let searchPreviewParams = previewurl.searchParams;\n            searchPreviewParams.set('id', response.questionid);\n            previewurl.search = searchPreviewParams.toString();\n            previewurl = previewurl.toString();\n            document.querySelector(SELECTORS.SLOT_ID + ' > .actions > .preview').setAttribute('href', previewurl);\n            let editurl = document.querySelector(SELECTORS.SLOT_ID + ' > .activityinstance > a').href;\n            editurl = new URL(editurl);\n            let searchparams = editurl.searchParams;\n            searchparams.set('id', response.questionid);\n            editurl.search = searchparams.toString();\n            editurl = editurl.toString();\n            document.querySelector(SELECTORS.SLOT_ID + ' > .activityinstance > a').href = editurl;\n        }\n    }).fail(Notification.exception);\n};\n\n/**\n * Replace the container with a new version.\n *\n * @param {int} slotId\n */\nconst changeVersion = (slotId) => {\n    const selectElement = document.querySelector(SELECTORS.VERSION_LIST);\n    selectElement.addEventListener('change', () => {\n        let versionSelected = parseInt(selectElement.value);\n        setSelectors(slotId);\n        let request = [{\n            methodname: 'mod_quiz_set_question_version',\n            args: {\n                slotid: slotId,\n                newversion: versionSelected\n            }\n        }];\n        ajax(request);\n    });\n};\n\n/**\n * Entrypoint of the js.\n *\n * @param {int} slotId\n */\nexport const init = (slotId) => {\n    setSelectors(slotId);\n    changeVersion(slotId);\n};\n"],"file":"question_slot.min.js"}