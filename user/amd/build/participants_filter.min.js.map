{"version":3,"sources":["../src/participants_filter.js"],"names":["init","filterRegionId","CoreFilter","filters","filterSet","pendingPromise","console","log","DynamicTable","setFilters","getTableFromId","dataset","tableRegion","jointype","parseInt","querySelector","Selectors","filterset","fields","join","value","then","result","resolve","catch","Notification","exception"],"mappings":"4gBAuBA,OACA,OACA,OACA,O,ylBAOO,GAAMA,CAAAA,CAAI,CAAG,SAAAC,CAAc,CAAI,CAClCC,CAAU,CAACF,IAAX,CAAgBC,CAAhB,CAAiC,SAASE,CAAT,CAAkBC,CAAlB,CAA6BC,CAA7B,CAA6C,CAC1EC,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EACAG,OAAO,CAACC,GAAR,CAAYH,CAAZ,EACAE,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACAG,CAAY,CAACC,UAAb,CACID,CAAY,CAACE,cAAb,CAA4BN,CAAS,CAACO,OAAV,CAAkBC,WAA9C,CADJ,CAEI,CACIC,QAAQ,CAAEC,QAAQ,CAACV,CAAS,CAACW,aAAV,CAAwBC,UAAUC,SAAV,CAAoBC,MAApB,CAA2BC,IAAnD,EAAyDC,KAA1D,CAAiE,EAAjE,CADtB,CAEIjB,OAAO,CAAPA,CAFJ,CAFJ,EAOKkB,IAPL,CAOU,SAAAC,CAAM,CAAI,CACZjB,CAAc,CAACkB,OAAf,GAEA,MAAOD,CAAAA,CACV,CAXL,EAYKE,KAZL,CAYWC,UAAaC,SAZxB,CAaH,CAjBD,CAmBH,CApBM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Participants filter management.\n *\n * @module     core_user/participants_filter\n * @copyright  2021 Tomo Tsuyuki <tomotsuyuki@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as CoreFilter from 'core/filter';\nimport * as DynamicTable from 'core_table/dynamic';\nimport Selectors from 'core/local/filter/selectors';\nimport Notification from 'core/notification';\n\n/**\n * Initialise the participants filter on the element with the given id.\n *\n * @param {String} filterRegionId The id for the filter element.\n */\nexport const init = filterRegionId => {\n    CoreFilter.init(filterRegionId,  function(filters, filterSet, pendingPromise) {\n        console.log(filters);\n        console.log(filterSet);\n        console.log(pendingPromise);\n        DynamicTable.setFilters(\n            DynamicTable.getTableFromId(filterSet.dataset.tableRegion),\n            {\n                jointype: parseInt(filterSet.querySelector(Selectors.filterset.fields.join).value, 10),\n                filters,\n            }\n        )\n            .then(result => {\n                pendingPromise.resolve();\n\n                return result;\n            })\n            .catch(Notification.exception);\n    });\n    // CoreFilter.init(filterRegionId, 'DynamicTable');\n};\n\n"],"file":"participants_filter.min.js"}