{"version":3,"sources":["../src/dd_categories.js"],"names":["setupSortableLists","SortableList","moveHandlerSelector","on","EVENTS","DROP","categoryListElements","parent","href","children","queryString","substr","search","params","URLSearchParams","cat","get","oldContextId","parseInt","oldCat","remove","val","getNewOrder","setCatOrder","JSON","stringify","updatedCategories","Ajax","call","methodname","args","categories","fail","Notification","exception","then","response","console","log","parse","newcatorder","i","length","listItems","querySelectorAll","listOrder","j","contextid","result","filter","ctxid","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    qbank_managecategories\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n*/\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport SortableList from 'core/sortable_list';\nimport jQuery from 'jquery';\n\n/**\n * Sets up sortable list in the column sort order page.\n *\n * @returns {Void}\n */\nconst setupSortableLists = () => {\n    new SortableList(\n        '.category_list',\n        {\n            moveHandlerSelector: '.list_item',\n        }\n    );\n\n    jQuery('.list_item').on(SortableList.EVENTS.DROP, () => {\n        let categoryListElements = jQuery('.list_item').parent();\n        // Get moved list item href URL.\n        let href = jQuery('li.list_item[style]')[0].children[0].children[0].href;\n        // Get query string for that URL.\n        let queryString = href.substr(href.search('\\\\?'));\n        const params = new URLSearchParams(queryString);\n        let cat = params.get('cat');\n        // Get old context and category id.\n        let oldContextId = parseInt(cat.substr(cat.search(',')+1));\n        let oldCat = parseInt(cat.substr(0, cat.search(',')));\n        // Remove proxy created by sortable list.\n        jQuery('li.list_item[style]').remove();\n        let val = getNewOrder(categoryListElements, oldContextId, oldCat);\n        // Call external function.\n        setCatOrder(JSON.stringify(val));\n    });\n};\n\n/**\n * Call external function set_category_order - inserts the updated column in the question_categories table.\n *\n * @param {String} updatedCategories String containing new sortorder.\n * @returns {Void}\n */\n const setCatOrder = (updatedCategories) => {\n    const val = Ajax.call([{\n        methodname: 'core_question_set_category_order',\n        args: {categories: updatedCategories},\n        fail: Notification.exception\n    }]);\n    val[0].then((response) => console.log(JSON.parse(response)));\n};\n\n/**\n * Retrieving the the order on EVENT.DROP, also gets new parameter\n *\n * @param {JQuery<HTMLElement>} categoryListElements List of HTML element to parse.\n * @param {Number}              oldContextId Old context id to change.\n * @returns {Array}\n */\nconst getNewOrder = (categoryListElements, oldContextId, oldCat) => {\n    let newcatorder = [];\n    let newcontextid = [];\n    for (let i = 0; i < categoryListElements.length; i++) {\n        let listItems = categoryListElements[i].querySelectorAll('li.list_item');\n        let listOrder = [];\n        for (let j = 0; j < listItems.length; j++) {\n            // Get href parameters.\n            let href = listItems[j].children[0].children[0].href;\n            let queryString = href.substr(href.search('\\\\?'));\n            const params = new URLSearchParams(queryString);\n            // Parameters.\n            let cat = params.get('cat');\n            let contextid = parseInt(cat.substr(cat.search(',')+1));\n            cat = parseInt(cat.substr(0, cat.search(',')));\n            listOrder[j] = [contextid];\n        }\n        const result = listOrder.filter((ctxid) => ctxid != oldContextId);\n        console.log(result);\n        newcatorder[i] = listOrder;\n    }\n    console.log('OLD CONTEXT ID ', oldContextId);\n    console.log('OLD CATEG ID ', oldCat);\n    // console.log(newcatorder);\n    //console.log(newcontextid);\n    return newcatorder;\n};\n\nexport const init = () => {\n    setupSortableLists();\n};"],"file":"dd_categories.min.js"}