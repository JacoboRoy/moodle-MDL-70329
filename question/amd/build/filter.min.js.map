{"version":3,"sources":["../src/filter.js"],"names":["init","filterRegionId","defaultcourseid","defaultcategoryid","perpage","recurse","showhidden","qbshowtext","contextId","filterSet","document","querySelector","wsfilter","filters","filteroptions","filterverb","displayoptions","page","showtext","sortdata","sortby","sortorder","SELECTORS","QUESTION_CONTAINER_ID","SORT_LINK","DEFAULT_PAGED_CONTENT_CONFIG","ignoreControlWhileLoading","controlPlacementBottom","TEMPLATE_NAME","coreFilter","CoreFilter","pendingPromise","applyFilter","requestQuestions","filter","ajax","call","methodname","args","filterdata","parseInt","dataset","Object","entries","key","value","jointype","values","toString","push","then","response","element","getElementById","firstChild","removeChild","warnings","warningcode","Notification","addNotification","message","type","totalquestions","questions","length","Promise","resolve","firstpagequestions","JSON","stringify","renderPagination","html","js","questionscontainer","Templates","replaceNodeContents","fail","exception","PagedContentFactory","createFromAjax","pagesData","map","pageData","pageNumber","qpage","Fragment","loadFragment","questionshtml","render","pagequestions","addEventListener","e","sortableLink","target","closest","preventDefault","oldsort","forEach","updateTableFromFilter","Selectors","region","addFilter"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Question bank filter managemnet.\n *\n * @module     core_question/filter\n * @copyright  2021 Tomo Tsuyuki <tomotsuyuki@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ajax from 'core/ajax';\nimport CoreFilter from 'core/filter';\nimport Fragment from 'core/fragment';\nimport Notification from 'core/notification';\nimport PagedContentFactory from 'core/paged_content_factory';\nimport Selectors from 'core/local/filter/selectors';\nimport Templates from 'core/templates';\n\n/**\n * Initialise the question bank filter on the element with the given id.\n *\n * @param {String} filterRegionId id of the filter region\n * @param {String} defaultcourseid default course id\n * @param {String} defaultcategoryid default category id\n * @param {int} perpage number of question per page\n * @param {boolean} recurse if loading sub categories\n * @param {boolean} showhidden if loading hidden question\n * @param {boolean} qbshowtext if loading question text\n * @param {int} contextId contextId\n */\nexport const init = (filterRegionId, defaultcourseid, defaultcategoryid,\n                     perpage, recurse, showhidden, qbshowtext, contextId) => {\n\n    const filterSet = document.querySelector(`#${filterRegionId}`);\n\n    // Default filter params for WS function.\n    let wsfilter = {\n        // Default value filterset::JOINTYPE_DEFAULT.\n        filters: [],\n        filteroptions: {\n            filterverb: 2,\n            recurse: recurse,\n            showhidden: showhidden,\n        },\n        displayoptions: {\n            perpage: perpage,\n            page: 0,\n            showtext: qbshowtext,\n        },\n        sortdata: [\n            {\n                sortby: 'qbank_viewquestiontype\\\\question_type_column',\n                sortorder: 4,\n            }\n        ],\n        defaultcourseid: defaultcourseid,\n        defaultcategoryid: defaultcategoryid,\n    };\n\n    // HTML <div> ID of question container.\n    const SELECTORS = {\n        QUESTION_CONTAINER_ID: '#questionscontainer',\n        SORT_LINK: '#questionscontainer div.sorters a',\n    };\n\n    // Default Pagination config.\n    const DEFAULT_PAGED_CONTENT_CONFIG = {\n        ignoreControlWhileLoading: true,\n        controlPlacementBottom: false,\n    };\n\n    // Template to render return value from ws function.\n    const TEMPLATE_NAME = 'core_question/qbank_questions';\n\n    // Init function with apply callback.\n    const coreFilter = new CoreFilter(filterSet, function(filters, pendingPromise) {\n        applyFilter(filters, pendingPromise);\n    });\n    coreFilter.init();\n\n    /**\n     * Ajax call to retrieve question via ws functions\n     *\n     * @returns {*}\n     * @param {Object} filter filter object\n     */\n    const requestQuestions = filter => {\n        const request = {methodname: 'core_qbank_get_questions', args: filter};\n        return ajax.call([request])[0];\n    };\n\n    /**\n     * Retrieve table data.\n     *\n     * @param {Object} filterdata data\n     * @param {Promise} pendingPromise pending promise\n     */\n    const applyFilter = (filterdata, pendingPromise) => {\n        // Getting filter data.\n        // Otherwise, the ws function should retrieves question based on default courseid and cateogryid.\n        if (filterdata) {\n            // Main join types.\n            wsfilter['filteroptions']['filterverb'] = parseInt(filterSet.dataset.filterverb, 10);\n\n            // Clean old filter\n            wsfilter['filters'] = [];\n\n            // Retrieve fitter info.\n            for (const [key, value] of Object.entries(filterdata)) {\n                let filter = {'filtertype': key, 'jointype': value.jointype, 'values': value.values.toString()};\n                wsfilter['filters'].push(filter);\n            }\n        }\n\n        // Load questions for first page.\n        requestQuestions(wsfilter)\n            .then(response => {\n                // Cleans any notifications if not needed.\n                let element = document.getElementById('user-notifications');\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                if (response.warnings[0] !== undefined) {\n                    if (response.warnings[0].warningcode === 'nocategoryconditionspecified') {\n                        Notification.addNotification({\n                            message: response.warnings[0].message,\n                            type: 'info'\n                          });\n                    }\n                }\n                const totalquestions = response.totalquestions;\n                if (response.questions.length === 0) {\n                    return Promise.resolve();\n                }\n                const firstpagequestions = {\n                    questions: JSON.stringify(response.questions),\n                    sortdata: JSON.stringify(wsfilter['sortdata'])\n                };\n                return renderPagination(wsfilter, totalquestions, firstpagequestions);\n            })\n            // Render questions for first page and pagination.\n            .then((html, js) => {\n                const questionscontainer = document.querySelector(SELECTORS.QUESTION_CONTAINER_ID);\n                if (html === undefined) {\n                    html = '';\n                }\n                if (js === undefined) {\n                    js = '';\n                }\n                Templates.replaceNodeContents(questionscontainer, html, js);\n                // Resolve filter promise.\n                if (pendingPromise) {\n                    pendingPromise.resolve();\n                }\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Render table and pagination.\n     *\n     * @param {Object} filter params\n     * @param {int} totalquestions\n     * @param {string} firstpagequestions\n     */\n    const renderPagination = (filter, totalquestions, firstpagequestions) => {\n        return PagedContentFactory.createFromAjax(\n            totalquestions,\n            perpage,\n            pagesData => {\n                return pagesData.map(pageData => {\n                    let pageNumber = pageData.pageNumber;\n                    // Page number start at 1.\n                    let qpage = pageNumber - 1;\n\n                    // Render first page\n                    if (qpage == 0) {\n                        return Fragment.loadFragment('core_question', 'question_list', contextId, firstpagequestions)\n                            .then(questionshtml => {\n                                return Templates.render(TEMPLATE_NAME, {html: questionshtml});\n                            });\n                    } else {\n                        // Load data for selected page.\n                        filter['displayoptions']['page'] = qpage;\n                        return requestQuestions(filter)\n                            .then(response => {\n                                const pagequestions = {\n                                    questions: JSON.stringify(response.questions),\n                                    sortdata: JSON.stringify(wsfilter['sortdata'])\n                                };\n                                return Fragment.loadFragment('core_question', 'question_list', contextId, pagequestions)\n                                    .then(questionshtml => {\n                                        return Templates.render(TEMPLATE_NAME, {html: questionshtml});\n                                    });\n                            })\n                        .fail(Notification.exception);\n                    }\n                });\n            },\n            DEFAULT_PAGED_CONTENT_CONFIG\n        );\n    };\n\n    // Add listeners for the sorting actions.\n    document.addEventListener('click', e => {\n        const sortableLink = e.target.closest(SELECTORS.SORT_LINK);\n        if (sortableLink) {\n            e.preventDefault();\n            let oldsort = wsfilter['sortdata'];\n            wsfilter['sortdata'] = [];\n            let sortdata = {\n                sortby: sortableLink.dataset.sortby,\n                sortorder: sortableLink.dataset.sortorder\n            };\n            wsfilter['sortdata'].push(sortdata);\n            oldsort.forEach(value => {\n                if (value['sortby'] != sortableLink.dataset.sortby) {\n                    wsfilter['sortdata'].push(value);\n                }\n            });\n            wsfilter['displayoptions']['page'] = 0;\n            coreFilter.updateTableFromFilter();\n        }\n    });\n\n    // Run apply filter at page load.\n    const filter = filterSet.querySelector(Selectors.filter.region);\n    coreFilter.addFilter(filter, 'category', [defaultcategoryid]);\n    applyFilter();\n};\n"],"file":"filter.min.js"}