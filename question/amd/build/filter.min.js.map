{"version":3,"sources":["../src/filter.js"],"names":["init","filterRegionId","defaultcourseid","defaultcategoryid","perpage","recurse","showhidden","qbshowtext","contextId","component","callback","filterSet","document","querySelector","wsfilter","filters","filteroptions","filterverb","displayoptions","showtext","sortdata","sortby","sortorder","SELECTORS","QUESTION_CONTAINER_ID","SORT_LINK","PAGINATION_LINK","coreFilter","CoreFilter","pendingPromise","applyFilter","requestQuestions","filter","ajax","call","methodname","args","filterdata","parseInt","dataset","Object","entries","key","value","jointype","values","toString","push","then","response","element","getElementById","firstChild","removeChild","warnings","warningcode","Notification","addNotification","message","type","renderQuestiondata","filtercondition","questionscontainer","questionhtml","jsfooter","Templates","replaceNodeContents","resolve","fail","exception","contextid","addEventListener","e","sortableLink","target","closest","paginationLink","preventDefault","oldsort","forEach","page","updateTableFromFilter","attr","getAttribute","urlParams","URLSearchParams","get","Selectors","region","addFilter"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Question bank filter managemnet.\n *\n * @module     core_question/filter\n * @copyright  2021 Tomo Tsuyuki <tomotsuyuki@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ajax from 'core/ajax';\nimport CoreFilter from 'core/filter';\nimport Notification from 'core/notification';\nimport Selectors from 'core/local/filter/selectors';\nimport Templates from 'core/templates';\n\n/**\n * Initialise the question bank filter on the element with the given id.\n *\n * @param {String} filterRegionId id of the filter region\n * @param {String} defaultcourseid default course id\n * @param {String} defaultcategoryid default category id\n * @param {int} perpage number of question per page\n * @param {boolean} recurse if loading sub categories\n * @param {boolean} showhidden if loading hidden question\n * @param {boolean} qbshowtext if loading question text\n * @param {int} contextId id of the context\n * @param {string} component name of the component for fragment\n * @param {string} callback name of the callback for the fragment\n */\nexport const init = (filterRegionId, defaultcourseid, defaultcategoryid,\n                     perpage, recurse, showhidden, qbshowtext,\n                     contextId, component, callback) => {\n\n    const filterSet = document.querySelector(`#${filterRegionId}`);\n\n    // Default filter params for WS function.\n    let wsfilter = {\n        // Default value filterset::JOINTYPE_DEFAULT.\n        filters: [],\n        filteroptions: {\n            filterverb: 2,\n            recurse: recurse,\n            showhidden: showhidden,\n        },\n        displayoptions: {\n            perpage: perpage,\n            showtext: qbshowtext,\n        },\n        sortdata: [\n            {\n                sortby: 'qbank_viewquestiontype\\\\question_type_column',\n                sortorder: 4,\n            }\n        ],\n        defaultcourseid: defaultcourseid,\n        defaultcategoryid: defaultcategoryid,\n    };\n\n    // HTML <div> ID of question container.\n    const SELECTORS = {\n        QUESTION_CONTAINER_ID: '#questionscontainer',\n        SORT_LINK: '#questionscontainer div.sorters a',\n        PAGINATION_LINK: '#questionscontainer a[href].page-link',\n    };\n\n    // Init function with apply callback.\n    const coreFilter = new CoreFilter(filterSet, function(filters, pendingPromise) {\n        applyFilter(filters, pendingPromise);\n    });\n    coreFilter.init();\n\n    /**\n     * Ajax call to retrieve question via ws functions\n     *\n     * @param {Object} filter filter object\n     * @returns {*}\n     */\n    const requestQuestions = filter => {\n        const request = {methodname: 'core_question_filter', args: filter};\n        return ajax.call([request])[0];\n    };\n\n    /**\n     * Retrieve table data.\n     *\n     * @param {Object} filterdata data\n     * @param {Promise} pendingPromise pending promise\n     */\n    const applyFilter = (filterdata, pendingPromise) => {\n        // Getting filter data.\n        // Otherwise, the ws function should retrieves question based on default courseid and cateogryid.\n        if (filterdata) {\n            // Main join types.\n            wsfilter.filteroptions.filterverb = parseInt(filterSet.dataset.filterverb, 10);\n\n            // Clean old filter\n            wsfilter.filters = [];\n\n            // Retrieve fitter info.\n            for (const [key, value] of Object.entries(filterdata)) {\n                let filter = {'filtertype': key, 'jointype': value.jointype, 'values': value.values.toString()};\n                wsfilter.filters.push(filter);\n            }\n        }\n\n        // Load questions for first page.\n        requestQuestions(wsfilter)\n            .then((response) => {\n                // Cleans any notifications if not needed.\n                let element = document.getElementById('user-notifications');\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                if (response.warnings[0] !== undefined) {\n                    if (response.warnings[0].warningcode === 'nocategoryconditionspecified') {\n                        Notification.addNotification({\n                            message: response.warnings[0].message,\n                            type: 'info'\n                          });\n                    }\n                }\n                return renderQuestiondata(response.filtercondition);\n            })\n            // Render questions for first page and pagination.\n            .then((response) => {\n                const questionscontainer = document.querySelector(SELECTORS.QUESTION_CONTAINER_ID);\n                if (response.questionhtml === undefined) {\n                    response.questionhtml = '';\n                }\n                if (response.jsfooter === undefined) {\n                    response.jsfooter = '';\n                }\n                Templates.replaceNodeContents(questionscontainer, response.questionhtml, response.jsfooter);\n                // Resolve filter promise.\n                if (pendingPromise) {\n                    pendingPromise.resolve();\n                }\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Render question data using the fragment.\n     * @param {object} filtercondition\n     * @return {*}\n     */\n    const renderQuestiondata = (filtercondition) => {\n        const viewData = {\n            component: component,\n            callback: callback,\n            filtercondition: filtercondition,\n            contextid: contextId\n        };\n        const request = {methodname: 'core_question_view', args: viewData};\n        return ajax.call([request])[0];\n    };\n\n    // Add listeners for the sorting actions.\n    document.addEventListener('click', e => {\n        const sortableLink = e.target.closest(SELECTORS.SORT_LINK);\n        const paginationLink = e.target.closest(SELECTORS.PAGINATION_LINK);\n        if (sortableLink) {\n            e.preventDefault();\n            let oldsort = wsfilter.sortdata;\n            wsfilter.sortdata = [];\n            let sortdata = {\n                sortby: sortableLink.dataset.sortby,\n                sortorder: sortableLink.dataset.sortorder\n            };\n            wsfilter.sortdata.push(sortdata);\n            oldsort.forEach(value => {\n                if (value.sortby !== sortableLink.dataset.sortby) {\n                    wsfilter.sortdata.push(value);\n                }\n            });\n            wsfilter.displayoptions.page = 0;\n            coreFilter.updateTableFromFilter();\n        }\n        if (paginationLink) {\n            e.preventDefault();\n            let attr = e.target.getAttribute(\"href\");\n            if (attr !== '#') {\n                const urlParams = new URLSearchParams(attr);\n                wsfilter.displayoptions.page = urlParams.get('qpage');\n                coreFilter.updateTableFromFilter();\n            }\n        }\n    });\n\n    // Run apply filter at page load.\n    const filter = filterSet.querySelector(Selectors.filter.region);\n    coreFilter.addFilter(filter, 'category', [defaultcategoryid]);\n    applyFilter();\n};\n"],"file":"filter.min.js"}