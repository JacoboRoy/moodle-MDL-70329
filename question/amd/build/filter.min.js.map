{"version":3,"sources":["../src/filter.js"],"names":["init","filterRegionId","defaultcourseid","defaultcategoryid","perpage","recurse","showhidden","qbshowtext","contextId","filterSet","document","querySelector","wsfilter","filters","filteroptions","filterverb","displayoptions","page","showtext","SELECTORS","QUESTION_CONTAINER_ID","DEFAULT_PAGED_CONTENT_CONFIG","ignoreControlWhileLoading","controlPlacementBottom","TEMPLATE_NAME","coreFilter","CoreFilter","pendingPromise","console","log","applyFilter","requestQuestions","filter","ajax","call","methodname","args","filterdata","parseInt","dataset","Object","entries","key","value","jointype","values","toString","push","then","response","totalquestions","questions","length","Promise","resolve","firstpagequestions","JSON","stringify","renderPagination","html","js","questionscontainer","getElementById","Templates","replaceNodeContents","fail","Notification","exception","PagedContentFactory","createFromAjax","pagesData","map","pageData","pageNumber","qpage","Fragment","loadFragment","questionshtml","render","pagequestions","Selectors","region","addFilter"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Question bank filter managemnet.\n *\n * @module     core_question/filter\n * @copyright  2021 Tomo Tsuyuki <tomotsuyuki@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ajax from 'core/ajax';\nimport CoreFilter from 'core/filter';\nimport Fragment from 'core/fragment';\nimport Notification from 'core/notification';\nimport PagedContentFactory from 'core/paged_content_factory';\nimport Selectors from 'core/local/filter/selectors';\nimport Templates from 'core/templates';\n\n/**\n * Initialise the question bank filter on the element with the given id.\n *\n * @param {String} filterRegionId id of the filter region\n * @param {String} defaultcourseid default course id\n * @param {String} defaultcategoryid default category id\n * @param {int} perpage number of question per page\n * @param {boolean} recurse if loading sub categories\n * @param {boolean} showhidden if loading hidden question\n * @param {boolean} qbshowtext if loading question text\n * @param {int} contextId contextId\n */\nexport const init = (filterRegionId, defaultcourseid, defaultcategoryid,\n                     perpage, recurse, showhidden, qbshowtext, contextId) => {\n\n    const filterSet = document.querySelector(`#${filterRegionId}`);\n\n    // Default filter params for WS function.\n    let wsfilter = {\n        // Default value filterset::JOINTYPE_DEFAULT.\n        filters: [],\n        filteroptions: {\n            filterverb: 2,\n            recurse: recurse,\n            showhidden: showhidden,\n        },\n        displayoptions: {\n            perpage: perpage,\n            page: 0,\n            showtext: qbshowtext,\n        },\n        defaultcourseid: defaultcourseid,\n        defaultcategoryid: defaultcategoryid,\n    };\n\n    // HTML <div> ID of question container.\n    const SELECTORS = {\n        QUESTION_CONTAINER_ID: 'questionscontainer',\n    };\n\n    // Default Pagination config.\n    const DEFAULT_PAGED_CONTENT_CONFIG = {\n        ignoreControlWhileLoading: true,\n        controlPlacementBottom: false,\n    };\n\n    // Template to render return value from ws function.\n    const TEMPLATE_NAME = 'core_question/qbank_questions';\n\n    // Init function with apply callback.\n    const coreFilter = new CoreFilter(filterSet, function(filters, pendingPromise) {\n        console.log('question/callback');\n        applyFilter(filters, pendingPromise);\n\n        console.log('question/callback:applied');\n    });\n    coreFilter.init();\n\n    /**\n     * Ajax call to retrieve question via ws functions\n     *\n     * @returns {*}\n     * @param {Object} filter filter object\n     */\n    const requestQuestions = filter => {\n        const request = {methodname: 'core_qbank_get_questions', args: filter};\n        return ajax.call([request])[0];\n    };\n\n    /**\n     * Retrieve table data.\n     *\n     * @param {Object} filterdata data\n     * @param {Promise} pendingPromise pending promise\n     */\n    const applyFilter = (filterdata, pendingPromise) => {\n        // Getting filter data.\n        // Otherwise, the ws function should retrieves question based on default courseid and cateogryid.\n        if (filterdata) {\n            // Main join types.\n            wsfilter['filteroptions']['filterverb'] = parseInt(filterSet.dataset.filterverb, 10);\n\n            // Clean old filter\n            wsfilter['filters'] = [];\n\n            // Retrieve fitter info.\n            for (const [key, value] of Object.entries(filterdata)) {\n                let filter = {'filtertype': key, 'jointype': value.jointype, 'values': value.values.toString()};\n                wsfilter['filters'].push(filter);\n            }\n        }\n\n        // Load questions for first page.\n        requestQuestions(wsfilter)\n            .then(response => {\n                const totalquestions = response.totalquestions;\n                if (response.questions.length === 0) {\n                    return Promise.resolve();\n                }\n                const firstpagequestions = {questions: JSON.stringify(response.questions)};\n                return renderPagination(wsfilter, totalquestions, firstpagequestions);\n            })\n            // Render questions for first page and pagination.\n            .then((html, js) => {\n                const questionscontainer = document.getElementById(SELECTORS.QUESTION_CONTAINER_ID);\n                if (html === undefined) {\n                    html = '';\n                }\n                if (js === undefined) {\n                    js = '';\n                }\n                Templates.replaceNodeContents(questionscontainer, html, js);\n                // Resolve filter promise.\n                if (pendingPromise) {\n                    pendingPromise.resolve();\n                }\n                return;\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Render table and pagination.\n     *\n     * @param {Object} filter params\n     * @param {int} totalquestions\n     * @param {string} firstpagequestions\n     */\n    const renderPagination = (filter, totalquestions, firstpagequestions) => {\n        return PagedContentFactory.createFromAjax(\n            totalquestions,\n            perpage,\n            pagesData => {\n                return pagesData.map(pageData => {\n                    let pageNumber = pageData.pageNumber;\n                    // Page number start at 1.\n                    let qpage = pageNumber - 1;\n\n                    // Render first page\n                    if (qpage == 0) {\n                        return Fragment.loadFragment('core_question', 'question_list', contextId, firstpagequestions)\n                            .then(questionshtml => {\n                                console.log('q1', questionshtml.length);\n                                console.log('TEMPLATE_NAME', TEMPLATE_NAME);\n                                return Templates.render(TEMPLATE_NAME, {html: questionshtml});\n                            });\n                    } else {\n                        // Load data for selected page.\n                        filter['displayoptions']['page'] = qpage;\n                        return requestQuestions(filter)\n                            .then(response => {\n                                const pagequestions = {questions: JSON.stringify(response.questions)};\n                                return Fragment.loadFragment('core_question', 'question_list', contextId, pagequestions)\n                                    .then(questionshtml => {\n                                        console.log('q2', questionshtml);\n                                        return Templates.render(TEMPLATE_NAME, {html: questionshtml});\n                                    });\n                            })\n                        .fail(Notification.exception);\n                    }\n                });\n            },\n            DEFAULT_PAGED_CONTENT_CONFIG\n        );\n    };\n\n    // Run apply filter at page load.\n    const filter = filterSet.querySelector(Selectors.filter.region);\n    coreFilter.addFilter(filter, 'category');\n    applyFilter();\n};\n"],"file":"filter.min.js"}