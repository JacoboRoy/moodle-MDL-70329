{"version":3,"sources":["../src/drag_drop.js"],"names":["draggables","document","querySelectorAll","containers","forEach","draggable","addEventListener","classList","add","style","opacity","remove","updatedColumns","getColumnOrder","callPhpFunc","container","e","preventDefault","afterElement","getDragAfterElement","clientY","querySelector","appendChild","insertBefore","y","draggableElements","reduce","closest","child","box","getBoundingClientRect","offset","top","height","element","Number","NEGATIVE_INFINITY","updatedcol","ajcall","Ajax","call","methodname","args","length","fail","Notification","exception","then","response","console","log","JSON","parse","updated","columns","Array","i","childNodes","innerText","trim","init","window"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    qbank_settingspage\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n*/\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nconst draggables = document.querySelectorAll('.item');\nconst containers = document.querySelectorAll('.list');\n\ndraggables.forEach(draggable => {\n    draggable.addEventListener('dragstart', () => {\n        draggable.classList.add('dragging');\n        draggable.classList.add('active');\n        draggable.style.opacity = '0.5';\n    });\n\n    draggable.addEventListener('dragend', () => {\n        draggable.classList.remove('dragging');\n        draggable.classList.remove('active');\n        draggable.style.opacity = null;\n        let updatedColumns = getColumnOrder();\n        callPhpFunc(updatedColumns);\n    });\n});\n\ncontainers.forEach(container => {\n    container.addEventListener('dragover', e => {\n        e.preventDefault();\n        let afterElement = getDragAfterElement(container, e.clientY);\n        let draggable = document.querySelector('.dragging');\n        if (!afterElement) {\n            container.appendChild(draggable);\n\n        } else {\n            container.insertBefore(draggable, afterElement);\n        }\n    });\n});\n\nconst getDragAfterElement = (container, y) => {\nconst draggableElements  = [...container.querySelectorAll('.item:not(.dragging)')];\n\nreturn draggableElements.reduce((closest, child) => {\n    let box = child.getBoundingClientRect();\n    let offset = y - box.top - box.height / 2;\n    if (offset < 0 && offset > closest.offset){\n        return {offset : offset, element: child};\n    } else {\n        return closest;\n    }\n}, {offset: Number.NEGATIVE_INFINITY}).element;\n};\n\nconst callPhpFunc = (updatedcol) => {\n    let ajcall = Ajax.call([{\n        methodname: 'core_question_get_length',\n        args: { length: updatedcol },\n        fail: Notification.exception\n    }]);\n    ajcall[0].then((response) => console.log(JSON.parse(response)));\n};\n\nconst getColumnOrder = () => {\n    let updated = [...document.querySelectorAll('.item')];\n    let columns = new Array(updated.length);\n    for (let i = 0; i < updated.length; i++) {\n        columns[i] = updated[i].childNodes[1].innerText.trim();\n    }\n    return updated.length;\n};\n\nexport const init = () => window.console.log('we have been started');"],"file":"drag_drop.min.js"}