define ("core_question/drag_drop",["exports","core/ajax","core/notification"],function(a,b,c){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.init=void 0;b=d(b);c=d(c);function d(a){return a&&a.__esModule?a:{default:a}}function e(a){return i(a)||h(a)||g(a)||f()}function f(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function g(a,b){if(!a)return;if("string"==typeof a)return j(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);if("Object"===c&&a.constructor)c=a.constructor.name;if("Map"===c||"Set"===c)return Array.from(c);if("Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c))return j(a,b)}function h(a){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(a))return Array.from(a)}function i(a){if(Array.isArray(a))return j(a)}function j(a,b){if(null==b||b>a.length)b=a.length;for(var c=0,d=Array(b);c<b;c++){d[c]=a[c]}return d}var k=document.querySelectorAll(".item"),l=document.querySelectorAll(".list");k.forEach(function(a){a.addEventListener("dragstart",function(){a.classList.add("dragging");a.classList.add("active");a.style.opacity="0.5"});a.addEventListener("dragend",function(){a.classList.remove("dragging");a.classList.remove("active");a.style.opacity=null;var b=o();n(JSON.stringify(b))})});l.forEach(function(a){a.addEventListener("dragover",function(b){b.preventDefault();var c=m(a,b.clientY),d=document.querySelector(".dragging");if(!c){a.appendChild(d)}else{a.insertBefore(d,c)}})});var m=function(a,b){var c=e(a.querySelectorAll(".item:not(.dragging)"));return c.reduce(function(a,c){var d=c.getBoundingClientRect(),e=b-d.top-d.height/2;if(0>e&&e>a.offset){return{offset:e,element:c}}else{return a}},{offset:Number.NEGATIVE_INFINITY}).element},n=function(a){var d=b.default.call([{methodname:"core_question_get_order",args:{columnarr:a},fail:c.default.exception}]);d[0].then(function(a){return console.log(JSON.parse(a))})},o=function(){for(var a=e(document.querySelectorAll(".item")),b=Array(a.length),c=0;c<a.length;c++){b[c]=a[c].childNodes[1].innerText.trim()}return b};a.init=function init(){return window.console.log("we have been started")}});
//# sourceMappingURL=drag_drop.min.js.map
