{"version":3,"sources":["../src/addcategory_dialogue.js"],"names":["displayModal","selector","contextid","cmid","trigger","ModalFactory","create","type","types","SAVE_CANCEL","title","Str","get_string","body","getBody","large","done","modal","setSaveButtonText","getRoot","on","ModalEvents","hidden","setBody","shown","append","save","e","submitForm","submitFormAjax","then","hide","location","reload","catch","error","params","JSON","stringify","htmlBody","Fragment","loadFragment","preventDefault","changeEvent","document","createEvent","initEvent","find","each","index","element","dispatchEvent","invalid","$","merge","length","first","focus","formData","serialize","Promise","resolve","Ajax","call","methodname","args","jsonformdata","fail","Notification","exception","submit","initModal"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module handling creation of Modal form.\n *\n * @package    qbank_managecategories\n * @copyright  2021 Catalyst IT Australia Pty Ltd\n * @author     Ghaly Marc-Alexandre <marc-alexandreghaly@catalyst-ca.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * Function handling display of moodle form.\n *\n * @param {string} selector Selector to trigger form display on.\n * @param {int} contextid Context id for fragment.\n * @param {int} cmid Cmid for fragment.\n */\nconst displayModal = (selector, contextid, cmid) => {\n    let trigger = $(selector);\n    ModalFactory.create({\n      type: ModalFactory.types.SAVE_CANCEL,\n      title: Str.get_string('addcategory', 'question'),\n      body: getBody(contextid, cmid),\n      large: true,\n    }, trigger)\n    .done((modal) => {\n      modal.setSaveButtonText(Str.get_string('addcategory', 'question'));\n      modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.setBody(getBody(contextid, cmid));\n      });\n      modal.getRoot().on(ModalEvents.shown, () => {\n        modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n      });\n      modal.getRoot().on(ModalEvents.save, (e) =>{\n        submitForm(modal, e);\n      });\n      modal.getRoot().on('submit', 'form', (e) => {\n        submitFormAjax(modal, e)\n        .then(() => {\n          modal.hide();\n          location.reload();\n        })\n        .catch((error) => error);\n      });\n    });\n};\n\n/**\n * Get body for moodle form from fragment new_category_form.\n *\n * @param {int} contextid Context id for fragment.\n * @param {int} cmid Cmid for fragment.\n * @returns {Promise}\n */\nconst getBody = (contextid, cmid) => {\n    let params = {cmid: JSON.stringify(cmid)};\n    let htmlBody = Fragment.loadFragment('qbank_managecategories', 'new_category_form', contextid, params);\n    return htmlBody;\n};\n\n/**\n * Call external function add_category_form - inserts the newly added category in the question_categories table.\n *\n * @param {Object} modal Object representing form data.\n * @returns {Mixed}\n */\nconst submitFormAjax = (modal, e) => {\n  e.preventDefault();\n  let changeEvent = document.createEvent('HTMLEvents');\n  changeEvent.initEvent('change', true, true);\n\n  modal.getRoot().find(':input').each((index, element) => {\n    element.dispatchEvent(changeEvent);\n  });\n\n  let invalid = $.merge(\n    modal.getRoot().find('[aria-invalid=\"true\"]'),\n    modal.getRoot().find('.error')\n  );\n\n  // If we found invalid fields, focus on the first one and do not submit via ajax.\n  if (invalid.length) {\n      invalid.first().focus();\n      return;\n  }\n\n  let formData =  modal.getRoot().find('form').serialize();\n  return Promise.resolve(\n    Ajax.call([{\n    methodname: 'qbank_managecategories_submit_add_category_form',\n    args: {jsonformdata: JSON.stringify(formData)},\n    fail: Notification.exception\n  }]));\n};\n\n/**\n * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n *\n * @param {Object} modal representing form data.\n * @param {Event} e Form submission event.\n */\nconst submitForm = (modal, e) => {\n  e.preventDefault();\n  modal.getRoot().find('form').submit();\n};\n\nexport const initModal = (selector, contextid, cmid) => {\n  displayModal(selector, contextid, cmid);\n};\n"],"file":"addcategory_dialogue.min.js"}